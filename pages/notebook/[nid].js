import Navbar from "@/components/Navbar";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import axios from "axios"
import Link from "next/link";
import Pageli from "@/components/Pageli";
import { useSession } from "next-auth/react"
import NavbarPage from "@/components/NavbarPage";

export default function notebook() {
    const { data: session } = useSession()

    const router = useRouter();
    const nid = router.query.nid;
    const [notebook, setNotebook] = useState({})
    const [pages, setPages] = useState([])
    
    useEffect(() => {
        async function get() {
            const data = await axios.get(`/api/pagefuncs/getNbByPageId/${nid}`)
            setNotebook(data.data.notebook)
    
            const res2 = await axios.get(`/api/notebookfuncs/getPagesByNotebook/${nid}`)
            setPages(res2.data.pages)
            
        }
        get()
        
    }, [nid])
    console.log(pages)
    function addPage() {
        const d = axios.post("/api/pagefuncs/createPage", {
            nid: nid,
        }).then((response) => {
            window.location.replace(`/pages/edit/${response.data.data.id}`)
        })
      
    }
    return (
        <>
        <Head>
        <title>Notebook - Notelite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"></link>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>

      </Head>
      <main>
      <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>       
      {notebook && (<NavbarPage uemail={notebook.uemail} nbid={notebook.id} nbname={notebook.name}/>)}<br/>
      <div class="container" style={{maxWidth: 1000}}>
          {notebook && (
            <>
            <nav class="navbar" style={{paddingBottom: 0}}>
              <h5>{notebook.name}</h5>        
              <div class="form-inline">
                <button className="btn btn-dark" style={{paddingTop: 2, paddingBottom: 2}}>â˜… Star (0)</button>
            </div>
            </nav>
            {/* <nav class="navbar navbar-light" style={{borderBottom: "1px solid lightgray"}}>
                <div>
            <a class="navbar-brand mb-0 h1" style={{marginRight:3, fontSize: 24}}>
            {notebook.name}
            </a> by {notebook.uemail}</div>

            </nav> */}

            </>
          )}<br/>
          {session && notebook && session.user.name === notebook.uemail && (
            <>  
            <button className="btn btn-outline-dark btn-sm" onClick={addPage} style={{marginBottom: 20}}>+ New page</button><br/>

            </>
          )}
            <ul class="list-group">
            {session && notebook && session.user.name === notebook.uemail && (
                <>
                {pages.map(p => 
                <Pageli link={`/pages/edit/${p.id}`} title={p.title} author={notebook.uemail}/>
            )}
                </>
            )}
            {!(session && notebook && session.user.name === notebook.uemail) && (
                <>
                {pages.map(p => 
                <Pageli link={`/pages/view/${p.id}`} title={p.title} author={notebook.uemail}/>
            )}
                </>
            )}
            
           
            </ul>
      </div>
      </main>
        </>
    )
}