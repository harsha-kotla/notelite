import Navbar from "@/components/Navbar";
import Head from "next/head";
import {useEffect, useState} from "react"
import { useSession } from "next-auth/react"
import { useRouter } from "next/router";
import 'react-quill/dist/quill.snow.css'
import dynamic from 'next/dynamic'
import axios from "axios"
import Link from "next/link";
import { useNavigate } from "react-router-dom";
import NavbarPage from "@/components/NavbarPage";

const QuillNoSSRWrapper = dynamic(import('react-quill'), {	
	ssr: false,
	loading: () => <p>Loading ...</p>,
	})


    const modules = {
        toolbar: [
          [{ header: '1' }, { header: '2' }, { font: [16] }],
          [{ innerHeight: [100] }],
          ['bold', 'italic', 'underline', 'strike', 'blockquote'],
          [
            { list: 'ordered' },
            { list: 'bullet' },
            { indent: '-1' },
            { indent: '+1' },
          ],
          ['link', 'image', 'video'],
          ['clean', "code-block"],
        ],
        clipboard: {
          // toggle to add extra line breaks when pasting HTML:
          matchVisual: false,
        },keyboard: {
          bindings: {
            // Set the default font size to 16px
            customFontSize: {
              key: 'S',
              shortKey: true,
              handler: function () {
                this.quill.format('size', '23px');
              },
            },
          },
        },
      }
      /*
       * Quill editor formats
       * See https://quilljs.com/docs/formats/
       */
      const formats = [
        'header',
        'font',
        'size',
        'bold',
        'italic',
        'underline',
        'strike',
        'blockquote',
        'list',
        'bullet',
        'indent',
        'link',
        'image',
        'video',
        'code'
      ]
export default function editpage() {
    const [title, setTitle] = useState()
    const [page, setPage] = useState()
    const [nb, setNb] = useState()
    const [content, setContent] = useState()
    const router = useRouter();
    const [nbid, setNbid] = useState("")
    const nid = router.query.pid
    
    const { data: session } = useSession()


    useEffect(() => {
      async function getpagebyid() {
        try {
          const response = await axios.get(`/api/pagefuncs/getPageById/${nid}`);
          setPage(response.data.page);
          setNbid(response.data.page.nbId);
          setTitle(response.data.page.title)
          setContent(response.data.page.content)
        } catch (error) {
          // Handle error if necessary
        }
      }
    
      async function getnotebook() {
        try {

          const data = await axios.get(`/api/pagefuncs/getNbByPageId/${nbid}`)

          setNb(data.data.notebook)
        } catch (error) {
          console.log(error)
          // Handle error if necessary
        }
      }
    
      getpagebyid();
      getnotebook();


    }, [nid, nbid]);    
    
    const saveTitle = async(e) => {
      setTitle(e.target.value)

    }
    const handlesave = async (e) => {
      e.preventDefault()
      try {
      await axios.post("/api/pagefuncs/savePage", {
        title,
        content,
        pid: page.id
      })
      }catch(err) {
        alert(err)
      }
    }

    if (session && nb && session.user.name == nb.uemail) {
    return (
        <>
        <Head>
        <title>Edit Page - Notelite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"></link>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
        
      </Head>
      <main>
      <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>        
      {page && nb && (
        <>
        <NavbarPage uemail={nb.uemail} nbid={nb.id} nbname={nb.name} title={title}/>
        </>
      )}
      {page && nb && (
            <>
            <form className="container" style={{maxWidth: 1150}} >
          <div>
          <nav class="navbar">
            <input placeholder="Title" value={title} onChange={saveTitle} style={{width: 300, padding: 10, border: "1px solid lightgray"}}></input><br/><br/>

            {content === page.content && (
                <button className="btn btn-dark" onClick={handlesave}>Save</button>

            )}            
            {content !== page.content && (
                <button className="btn btn-dark" onClick={handlesave}>Save (unsaved changes)</button>

            )}
          </nav><br/>

            <QuillNoSSRWrapper value={content} onChange={(content) => setContent(content)} theme="snow"/>        
            </div><br/>
      </form>
            </>
          )}
      
      </main>
        </>
    )
    } else {
      return (
        <>
        <Head>
        <title>Edit Page - Notelite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"></link>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
        
      </Head>
      <main>

      <center><h3 style={{marginTop: "25%"}}><a href={`/pages/view/${nid}`}>You don't have access. Click here to redirect.</a></h3></center>

      </main>
        </>
      )
    }
}