import Navbar from "@/components/Navbar";
import Head from "next/head";
import {useCallback, useEffect, useState} from "react"
import { useRouter } from "next/router";
import 'react-quill/dist/quill.snow.css'
import dynamic from 'next/dynamic'
import axios from "axios"
import Link from "next/link";
import NavbarPage from "@/components/NavbarPage";
const QuillNoSSRWrapper = dynamic(import('react-quill'), {	
	ssr: false,
	loading: () => <p>Loading ...</p>,
	})
  const sizes = ['12px', '14px', '16px']; // Customize your font sizes here


// var fontSizeStyle = Quill.import('attributors/style/size');
// fontSizeStyle.whitelist = ['24px', '48px', '100px', '200px'];
// QuillNoSSRWrapper.register(fontSizeStyle, true);


const modules = {
      toolbar: [
        [{ header: '1' }, { header: '2' }, { font: [16] }],
        ['bold', 'italic', 'underline', 'strike', 'blockquote'],
        [
          { list: 'ordered' },
          { list: 'bullet' },
          { indent: '-1' },
          { indent: '+1' },
        ],
        ['link', 'image', 'video'],
        ['clean', "code-block"],
        ['font-sizes', ['12px']]
      ],
      clipboard: {
        // toggle to add extra line breaks when pasting HTML:
        matchVisual: false,
      },keyboard: {
        bindings: {
          // Set the default font size to 16px
          customFontSize: {
            key: 'S',
            shortKey: true,
            handler: function () {
              this.quill.format('size', '23px');
            },
          },
        },
      },
    }
    
const formats = [
  'header',
  'font',
  'size',
  'bold',
  'italic',
  'underline',
  'strike',
  'blockquote',
  'list',
  'bullet',
  'indent',
  'link',
  'image',
  'video',
  'code'
]
export default function editpage() {
    const [title, setTitle] = useState()
    const [page, setPage] = useState({})
    const [notebook, setNotebook] = useState({})
    const [content, setContent] = useState()
    const router = useRouter();
    const nid = router.query.pid

    
  
    useEffect(() => {
      async function fetchPageById(){
        // const response = await axios.post("/api/pagefuncs/getPageById", {
        //   nid: nid,
        // });
        const response = await axios.get(`/api/pagefuncs/getPageById/${nid}`)
        setPage(response.data.page);
        setTitle(response.data.page.title);
        setContent(response.data.page.content);
        const response2 = await axios.get(`/api/pagefuncs/getNbByPageId/${response.data.page.nbId}`)

        setNotebook(response2.data.notebook)
      }
      fetchPageById();
    }, [nid]);

    return (
          <>
          <Head>
          {page && (
          <title>{page.title} - Notelite</title>
          )}
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"></link>
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
          
        </Head>
        <main>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>        
        {page && notebook && (<NavbarPage uemail={notebook.uemail} nbname={notebook.name} nbid={notebook.id} title={title}/>)}
        {page && notebook && (
              <>
              
            <div className="container" style={{maxWidth: 1000}} >
              <div style={{marginTop: 15}}>
              <div dangerouslySetInnerHTML={{ __html: content }}/>
              
              </div><br/>
             
            </div>
              </>
            )}
          
        </main>
          </>
      )
}
